<?xml version="1.0" encoding="utf-8"?>

<launch>
	<arg name="fixed_frame" value="velodyne"/>
    <!-- <node name="tf_broadcaster" pkg="examples" type="tf2_frame.py" output="screen" /> -->

    <!-- Launch detection_node -->
    <node name="detection_node" pkg="tracking_lib" type="tracking_lib_detection_node" output="screen" >
        <rosparam command="load" file="$(find tracking_lib)/config/detection_test.yaml"/>
        <rosparam command="load" file="$(find tracking_lib)/config/kitti/Segmenter_test.yaml"/>
    </node>

    <!-- Launch tracking_node -->
    <node name="tracking_node" pkg="tracking_lib" type="tracking_lib_tracking_node" output="screen" >
        <rosparam command="load" file="$(find tracking_lib)/config/tracking_test.yaml"/>
        <rosparam command="load" file="$(find tracking_lib)/config/kitti/TrackingWorker.yaml"/>
    </node>

	<include file="$(find rviz_car_model)/launch/default.launch">
		<arg name="fixed_frame" value="velodyne"/>
		<!-- x y z qx qy qz qw -->
		<arg name="transform" value="-2.0 0 -0.8 0 0 0 1"/>
	</include>

    <!-- <node pkg="examples" type="tf_lidar2map_pub.py" name="tf"  />
    <node pkg="examples" type="mgeo_pub.py" name="mgeo_pub"  />    
    <node pkg="examples" type="gps_imu_parser.py" name="gps_imu_parser" /> -->

        <!--- TF -->
    <node pkg="tf" type="static_transform_publisher" name="camera_init_to_map"  args="0 0 0 1.570795   0        1.570795 /map    /camera_init 10" />
    <node pkg="tf" type="static_transform_publisher" name="velodyne_to_camera" args="0 0 0 -1.570795 -1.570795 0        /camera /velodyne   10"/>
    <!-- Launch rviz for visualization -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find tracking_lib)/rviz/demo.rviz"/>
</launch>
